User Inputs:----------------------------------------------------------------------------------------------->

import java.util.Scanner;

class apples {
	public static void main(String []args) {
		 Scanner bucky = new Scanner(System.in); // assigns keyboard input to bucky
		 System.out.println(bucky.nextLine()); // waits until input from the keyboard before outputting bucky
	}
}

Building a Calculator:-------------------------------------------------------------------------------------->
	
	import java.util.Scanner;

class apples {
	public static void main(String []args) {
		Scanner bucky = new Scanner(System.in);
		double fnum, snum, answer;
		System.out.println("Enter first num: ");
		fnum = bucky.nextDouble(); //wait until the input of a number instead of nextLine() which is waiting for a word
		System.out.println("Enter second num: ");
		snum = bucky.nextDouble();
		answer = fnum + snum;
		System.out.println(answer);
	}
}

Using Multiple Classes:-------------------------------------------------------------------------------------->

	class apples {
	public static void main(String []args) {
		tuna tunaObject = new tuna();
		tunaObject.simpleMessage();
	}
}

<-------------------------------------------Seperate Class file----------------------------------------------->
	
	public class tuna {
		public void simpleMessage() {
			System.out.println("This is another class");
		}
	}	

Using Methods with Parameters:----------------------------------------------------------------------------------->

import java.util.Scanner;

class apples {
	public static void main(String []args) {
		tuna tunaObject = new tuna();
		Scanner input = new Scanner(System.in); //Gets keyboard input
		System.out.println("Enter your name here: ");
		String name = input.nextLine(); //puts the key input into a String name
		tunaObject.simpleMessage(name); //passes name into the method
	}
}

public class tuna {
	public void simpleMessage(String name) {
		System.out.println("Hello " + name);
	}
}

Many Methods and Instances:---------------------------------------------------------------------------------------------->

import java.util.Scanner;

class apples {
	public static void main(String []args) {
		tuna tunaObject = new tuna();
		Scanner input = new Scanner(System.in);
		System.out.println("Enter name of first gf here: ");
		String temp = input.nextLine();
		tunaObject.setName(temp); //sets girlfriend name
		tunaObject.saying(); //outputs the name that in in the tuna class
	}
}

public class tuna {
	private String girlName; //can only be accessed inside the tuna class
	public void setName(String name) {
		girlName = name;
	}
	public String getName() {
		return girlName;
	}
	public void saying() {
		System.out.printf("Your first gf was %s", getName()); //takes the return of the method getName() and output at %s
	}
}

Constructors:-------------------------------------------------------------------------------------------------------------->

import java.util.Scanner;

class apples {
	public static void main(String []args) {
		tuna tunaObject = new tuna("Kelly");  //Now with a constructor you pass it values depending on the constructor
		tuna tunaObject2 = new tuna("Kelly2");
		tunaObject.saying();  //Will now have an output instead of null
		tunaObject2.saying();
	}
}

public class tuna {
	private String girlName;
	
	public tuna(String name) { //Constructor that gave the girlName a value when first initialized
		girlName = name;
		
	}
	
	public void setName(String name) {
		girlName = name;
	}
	public String getName() {
		return girlName;
	}
	public void saying() {
		System.out.printf("Your first gf was %s", getName());
	}
}

Simple Averaging Program:--------------------------------------------------------------------------------------------------->

import java.util.Scanner;

class apples {
	public static void main(String []args) {
		Scanner input = new Scanner(System.in);
		int total = 0;
		int grade;
		int average;
		int counter=0;
		
		while(counter < 10) {
			grade = input.nextInt();
			total += grade;
			counter++;
		}
		average = total / 10;
		System.out.println("Your average is " + average);
	}
}

Compound Interest Program:-------------------------------------------------------------------------------------------------------->

class apples {
	public static void main(String []args) {
		double amount;
		double principal = 10000;
		double rate = 0.01;
		
		for(int day=1; day<=20; day++) {
			amount=principal*Math.pow(1 + rate, day); // a = P*(1+rate)^(day)
			System.out.println(day +"   " + amount);
		}
		
	}
}

Math Class Methods:------------------------------------------------------------------------------------------------------------->

class apples {
	public static void main(String []args) {
		System.out.println(Math.abs(-26.7)); //absolute value
		System.out.println(Math.ceil(7.4));  //round up
		System.out.println(Math.floor(7.4)); //round down
		System.out.println(Math.max(8.6, 5.2)); //give the bigger number
		System.out.println(Math.min(8.6, 5.2)); //give the smaller number
		System.out.println(Math.pow(5,3));      //5^3
		System.out.println(Math.sqrt(9));      //sqrt(9) = 3
	}
}

Random Number Generator:------------------------------------------------------------------------------------------------------>

import java.util.Random;

class apples {
	public static void main(String []args) {
		Random dice = new Random();
		int number;
		
		for(int counter=1; counter <=10; counter++) {
			number = 1+dice.nextInt(6); //make sure u have 1-6 or else u will have 0-5
			System.out.println(number);
		}
	}
}

Introduction to Array:------------------------------------------------------------------------------------------------------------------>

class apples {
	public static void main(String []args) {
		int bucky[] = new int[10]; //Array bucky that can store 10 values
	
		bucky[0] = 87;
		bucky[1] = 543;
		bucky[9] = 65;
		
		System.out.println(bucky[1]);
	}
}

<---------------------------------------------------------or-------------------------------------------------------------->

class apples {
	public static void main(String []args) {
		int bucky[] = {2,4,5,7,9}; 
		
		System.out.println(bucky[2]);
	}
}

Creating an Array Table:-------------------------------------------------------------------------------------------------------------->

class apples {
	public static void main(String []args) {
		System.out.println("Index\tValue"); //\t creates a table with two columns
		int bucky[] = {1,2,3,4,5,6};
		
		for(int counter = 0; counter<bucky.length; counter++) {
			System.out.println(counter + "\t" + bucky[counter]);
		}
		
	}
}

Array Elements as Counters:-------------------------------------------------------------------------------------------------------------------->

import java.util.Random;

class apples {
	public static void main(String []args) {
		Random rand = new Random();
		int freq[] = new int[7];
		
		for(int roll=1; roll<1000; roll++) {
			++freq[1+rand.nextInt(6)]; // gives a random number between 1 to 6
		}
		
		System.out.println("Face\tFrequency"); //creates a table that shows how much a certain face appears
		
		for(int face=1; face<freq.length; face++ ) {
			System.out.println(face + "\t" + freq[face]);
		}
	}
}

Enhanced For Loops:---------------------------------------------------------------------------------------------------------------------->

class apples {
	public static void main(String []args) {
		int bucky[] = {3,4,5,6,7};
		int total=0;
		
		for(int x: bucky) { //loops through the array and x takes the value in the array
			total+=x;
			
		}
		System.out.println(total);
	}
}

Arrays in Methods:------------------------------------------------------------------------------------------------------------------>

class apples {
	public static void main(String []args) {
		int bucky[] = {3,4,5,6,7};
		change(bucky);
		for(int y:bucky) {
			System.out.println(y);
		}
		
	}
	
	public static void change(int x[]) { //Takes in an Array
		for(int counter=0; counter<x.length; counter++) {
			x[counter]+=5;
		}
	}
}

Multidimensional Arrays:------------------------------------------------------------------------------------------------------------->


















